name: CI/CD

on:
  push:
    branches: [ "master", "develop" ]
    paths-ignore: [ "*.md" ]
  pull_request:
    types: [ "opened", "synchronize", "reopened" ]
    paths-ignore: [ "*.md" ]

jobs:

  build:
    name: 'Build project and deploy'
    runs-on: ubuntu-latest

    steps:
      - name: 'Setup Node.js'
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 'Setup Firebase credentials'
        env:
          CREDENTIAL: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo $CREDENTIAL > /tmp/credentials.json

      - name: 'Setup Firebase CLI'
        run: |
          npm install -g firebase-tools

      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 'Build project'
        run: |
          yarn install
          yarn build

      - name: 'Deploy to development environment'
        if: github.ref != 'refs/heads/master'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: '/tmp/credentials.json'
        run: |
          BRANCH=$(echo $GITHUB_REF | sed 's/^.*\/\(.*\)$/\1/g')
          firebase hosting:channel:deploy $BRANCH

      - name: 'Deploy to production environment'
        if: github.ref == 'refs/heads/master'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: '/tmp/credentials.json'
        run: |
          firebase deploy --only hosting